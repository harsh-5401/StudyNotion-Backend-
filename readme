# StudyNotion Backend Server

Welcome to the backend server for StudyNotion, an educational platform designed to provide a seamless learning experience. This server handles user authentication, course management, payment processing, and more.

## Table of Contents

- [Features](#features)
- [Installation](#installation)
- [Configuration](#configuration)
- [Usage](#usage)
- [API Endpoints](#api-endpoints)
- [Contributing](#contributing)
- [License](#license)

## Features

- User authentication and authorization
- Course creation and management
- Payment processing with Razorpay
- Email notifications for various actions
- Cloudinary integration for media uploads
- JWT-based authentication

## Installation

1. Clone the repository:

   ```bash
   git clone https://github.com/yourusername/studynotion-backend.git
   cd studynotion-backend
   ```

2. Install dependencies:

   ```bash
   npm install
   ```

3. Set up environment variables. Create a `.env` file in the root directory and add the following:

   ```plaintext
   PORT=4000
   MONGODB_URL=your_mongodb_connection_string
   JWT_SECRET=your_jwt_secret
   RAZORPAY_KEY=your_razorpay_key
   RAZORPAY_SECRET=your_razorpay_secret
   MAIL_HOST=smtp.gmail.com
   MAIL_USER=your_email@gmail.com
   MAIL_PASSWORD=your_email_password
   CLOUD_NAME=your_cloudinary_cloud_name
   API_KEY=your_cloudinary_api_key
   API_SECRET=your_cloudinary_api_secret
   ```

## Configuration

Ensure that you have the following services set up:

- MongoDB for database management
- Razorpay for payment processing
- Cloudinary for media storage
- Gmail or another SMTP service for email notifications

## Usage

Start the server:

```bash
npm start
```

The server will run on the port specified in your `.env` file (default is 4000).

## API Endpoints

Here are some of the key API endpoints available:

- **Authentication**
  - `POST /api/auth/signup` - Register a new user
  - `POST /api/auth/login` - Log in a user
  - `POST /api/auth/changepassword` - Change user password

- **Courses**
  - `POST /api/courses/create` - Create a new course
  - `GET /api/courses` - Get all courses
  - `PUT /api/courses/edit` - Edit a course
  - `DELETE /api/courses/delete` - Delete a course

- **Payments**
  - `POST /api/payments/capture` - Capture a payment
  - `POST /api/payments/verify` - Verify a payment

For a full list of endpoints and their details, refer to the API documentation.

## Contributing

Contributions are welcome! Please fork the repository and submit a pull request for any improvements or bug fixes.

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

```

</rewritten_file>





# to setup backend/server install following

# 1-npm i express
# 2-npm i mongoose
# 3-npm i dotenv
# 4-npm i nodemon
# 5-npm i cookie-parser
# 6-npm i jsonwebtoken
# 7-npm i nodemailer
# 8-npm i otp-generator
# 9-npm i bcrypt
# 10-npm i razorpay
# 11-npm i cloudinary
# 12-npm i cors
# 13-npm i express-fileupload